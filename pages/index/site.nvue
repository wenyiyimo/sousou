<template>
	<view>
		<view class="header">
			<view class="header-top"></view>
			<view class="between-row">
				<text class="first-text" @click="navBack">返回</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;margin-right: 10px;"
					placeholder="请输入json格式数据"
					bgColor="#EEEEEE"
					v-model="impdata"
					cancelButton="none"
					@confirm="importEvent"
					borderColor="#000000"
					maxlength="-1"
					clearButton="always"
				></uni-search-bar>
				<text class="first-text" @click="importEvent">保存</text>
			</view>
		</view>
		<view class="body">
			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="start-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">数据类型</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;"
					maxlength="-1"
					clearButton="always"
					v-model="texttype"
					placeholder="json或html"
					bgColor="#EEEEEE"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
			</view>
			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="start-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">分类标签</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;"
					maxlength="-1"
					clearButton="always"
					v-model="tagname"
					placeholder="名字中间用&&&分隔"
					bgColor="#EEEEEE"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
			</view>
			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="start-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">分类链接</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="链接间&&&页数用PAGE"
					bgColor="#EEEEEE"
					cancelButton="none"
					v-model="tagurl"
					borderColor="#000000"
				></uni-search-bar>
			</view>
			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="start-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">首页数值</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;margin-right: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="默认1"
					bgColor="#EEEEEE"
					v-model="startnum"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
				<text class="second-text" style="margin-top: 5px">第2页数值</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="默认2"
					bgColor="#EEEEEE"
					v-model="secondnum"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
			</view>
			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="between-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">范围</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;margin-right: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="数据整体范围"
					bgColor="#EEEEEE"
					cancelButton="none"
					v-model="range"
					borderColor="#000000"
				></uni-search-bar>
				<text class="second-text" style="margin-top: 5px;" @click="rangeTest()">测试</text>
			</view>

			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="between-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">列表</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;margin-right: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="数据列表"
					bgColor="#EEEEEE"
					v-model="item"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
				<text class="second-text" style="margin-top: 5px;" @click="itemTest()">测试</text>
			</view>

			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="between-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">图片</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;margin-right: 10px;"
					maxlength="-1"
					clearButton="always"
					v-model="picture"
					placeholder="获取图片"
					bgColor="#EEEEEE"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
				<text class="second-text" style="margin-top: 5px;" @click="picTest()">测试</text>
			</view>

			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="start-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">图片前缀</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="链接不完整时设置"
					v-model="picurl"
					bgColor="#EEEEEE"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
			</view>
			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<view class="between-row" style="height: 30px;">
				<text class="second-text" style="margin-top: 5px">标题</text>
				<uni-search-bar
					style="flex:1;margin-left: 10px;margin-right: 10px;"
					maxlength="-1"
					clearButton="always"
					placeholder="获取标题"
					v-model="title"
					bgColor="#EEEEEE"
					cancelButton="none"
					borderColor="#000000"
				></uni-search-bar>
				<text class="second-text" style="margin-top: 5px;" @click="titleTest()">测试</text>
			</view>

			<view style="background-color: #d8d8d8;height: 1px;margin-bottom: 10px;margin-top: 10px;"></view>
			<text class="second-text">{{ logger }}</text>
		</view>
	</view>
</template>

<script setup>
import { onLoad, onShow } from '@dcloudio/uni-app';
import UniSearchBar from '@/components/uni_ui/uni-search-bar/components/uni-search-bar/uni-search-bar.vue';
import UniIcons from '@/components/uni_ui/uni-icons/components/uni-icons/uni-icons.vue';
import UniCard from '@/components/uni_ui/uni-card/components/uni-card/uni-card.vue';
import http from '@/utils/http.js';
import { ref, reactive } from 'vue';
const index = reactive(uni.getStorageSync('index'));

const impdata = ref('');
const texttype = ref('');
const tagname = ref('');
const tagurl = ref('');
const startnum = ref('');
const secondnum = ref('');
const range = ref('');
const item = ref('');
const picture = ref('');
const picurl = ref('');
const title = ref('');
const logger = ref('');
const sWidth = uni.getStorageSync('sWidth');
// console.log(sWidth);
const sHeight = uni.getStorageSync('sHeight');
texttype.value = index.texttype;
tagname.value = index.tagname;
tagurl.value = index.tagurl;
startnum.value = index.startnum;
secondnum.value = index.secondnum;
range.value = index.range;
item.value = index.item;
picture.value = index.picture;
picurl.value = index.picurl;
title.value = index.title;
const navBack = async () => {
	uni.navigateBack();
};
const importEvent = async () => {
	if (impdata.value.trim() == '') {
		index = {
			texttype: texttype.value,
			tagname: tagname.value,
			tagurl: tagurl.value,
			startnum: startnum.value,
			secondnum: secondnum.value,
			range: range.value,
			item: item.value,
			picture: picture.value,
			picurl: picurl.value,
			title: title.value
		};
		uni.setStorageSync('index', index);
	} else {
		index = JSON.parse(impdata.value);
		uni.setStorageSync('index', index);
		texttype.value = index.texttype;
		tagname.value = index.tagname;
		tagurl.value = index.tagurl;
		startnum.value = index.startnum;
		secondnum.value = index.secondnum;
		range.value = index.range;
		item.value = index.item;
		picture.value = index.picture;
		picurl.value = index.picurl;
		title.value = index.title;
	}
};
const geturl = async () => {
	let url = tagurl.value.split('&&&')[0];
	return url.replace('PAGE', startnum.value);
};
const rangeTest = async () => {
	let url = await geturl();
	let data = await http.get(url);
	if (texttype.value.trim() == 'html') {
		let res = await http.matchOne(range.value, data);
		if (res.flag) {
			logger.value = res.data;
			return {
				flag: true,
				data: res.data
			};
		} else {
			logger.value = '获取失败';
			return {
				flag: false,
				data: '获取失败'
			};
		}
	} else {
		let res = await http.matchjson(range.value, JSON.parse(data));
		if (res.flag) {
			logger.value = res.data;
			return {
				flag: true,
				data: res.data
			};
		} else {
			logger.value = '获取失败';
			return {
				flag: false,
				data: '获取失败'
			};
		}
	}
};
const itemTest = async () => {
	let res = await rangeTest();
	if (res.flag) {
		if (texttype.value.trim() == 'html') {
			let resitem = await http.matchAll(item.value, res.data);
			if (resitem.flag) {
				logger.value = resitem.data;
				return {
					flag: true,
					data: resitem.data
				};
			} else {
				logger.value = '获取失败';
				return {
					flag: false,
					data: '获取失败'
				};
			}
		} else {
			let resitem = await http.matchjson(item.value, res.data);
			if (resitem.flag) {
				logger.value = resitem.data;
				return {
					flag: true,
					data: resitem.data
				};
			} else {
				logger.value = '获取失败';
				return {
					flag: false,
					data: '获取失败'
				};
			}
		}
	} else {
		logger.value = '获取失败';
		return {
			flag: false,
			data: '获取失败'
		};
	}
};
const picTest = async () => {
	let res = await itemTest();
	if (res.flag) {
		if (texttype.value.trim() == 'html') {
			let respic = await http.matchAll(picture.value, res.data[0]);
			if (respic.flag) {
				logger.value = picurl.value + respic.data;
			} else {
				logger.value = '获取失败';
			}
		} else {
			let respic = await http.matchjson(picture.value, res.data[0]);
			if (respic.flag) {
				logger.value = picurl.value + respic.data;
			} else {
				logger.value = '获取失败';
			}
		}
	} else {
		logger.value = '获取失败';
	}
};
const titleTest = async () => {
	let res = await itemTest();
	if (res.flag) {
		if (texttype.value.trim() == 'html') {
			let restitle = await http.matchAll(title.value, res.data[0]);
			if (restitle.flag) {
				logger.value = restitle.data;
			} else {
				logger.value = '获取失败';
			}
		} else {
			let restitle = await http.matchjson(title.value, res.data[0]);
			if (restitle.flag) {
				logger.value = restitle.data;
			} else {
				logger.value = '获取失败';
			}
		}
	} else {
		logger.value = '获取失败';
	}
};
</script>

<style lang="scss" scoped>
@import url('@/common/common.scss');
</style>
